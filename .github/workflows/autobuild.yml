name: Get latest release version

on:
  push:
  workflow_dispatch:
  #schedule:
  #  - cron:  '0 30 * * *'

jobs:
  tag-version:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch latest released version
        id: latest
        run: |
          VER=$(curl -sL "https://api.github.com/repos/Backblaze/B2_Command_Line_Tool/releases/latest" | jq -r '.tag_name' | cut -c 2-)
          echo "::set-output name=version::$VER"
          echo "Available version: $VER"
      
      - name: Check current version
        id: current
        run: |
          CUR=$(curl -sL "https://api.github.com/repos/Sierra1011/backblaze-b2/releases/latest" | jq -r '.tag_name' )
          echo "::set-output name=version::$CUR"
          echo "Released version: $CUR"
      
      - name: Compare versions
        id: compare
        run: |
          if [ "${{ steps.latest.outputs.version }}" = "${{ steps.current.outputs.version }}" ]; then
            echo "::set-output name=update::false"
            echo "Update not needed"
          else
            echo "::set-output name=update::true"
            echo "Update needed"
          fi       

      - name: Create release
        if: steps.compare.outputs.update == 'true'
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ steps.latest.outputs.version }}"
          name: "v${{ steps.latest.outputs.version }}"
          commit: "main"

      - name: Generate Docker metadata
        if: steps.compare.outputs.update == 'true'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            docker.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: |
            latest=true
      
      - name: Setup Docker Buildx
        if: steps.compare.outputs.update == 'true'
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        if: steps.compare.outputs.update == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: steps.compare.outputs.update == 'true'
        uses: docker/build-push-action@v2
        env:
          DOCKER_BUILDKIT: 1
        with:
          build-args: |
            VERSION=${{ steps.latest.outputs.version }}
          push: true
          context: ./
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}